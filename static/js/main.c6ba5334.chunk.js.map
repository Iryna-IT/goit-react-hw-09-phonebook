{"version":3,"sources":["components/AppBar/AppBar.module.css","components/UserMenu/UserMenu.module.css","redux/contacts/contacts-reducers.js","redux/filter/filter-actions.js","redux/filter/filter-reducers.js","components/App.module.css","redux/auth/auth-actions.js","redux/auth/auth-reducers.js","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","redux/contacts/contacts-actions.js","redux/contactsReducer.js","redux/userReducer.js","redux/store.js","components/AuthNav/AuthNav.js","components/UserMenu/default-avatar.png","components/UserMenu/UserMenu.js","components/AppBar/AppBar.js","components/Routes/PrivateRoute.js","components/Routes/PublicRoute.js","components/App.jsx","index.js"],"names":["module","exports","contacts","createReducer","fetchContactsSuccess","_","payload","addContactSuccess","state","deleteContactSuccess","filter","id","loading","fetchContactsRequest","fetchContactsError","addContactRequest","addContactError","deleteContactRequest","deleteContactError","setError","error","filterContacts","createAction","filterActions","registerRequest","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","initialUserState","name","email","user","token","isAuthenticated","axios","defaults","baseURL","headers","common","Authorization","register","credentials","dispatch","a","post","response","data","message","logOut","logIn","alert","getCurrentUser","getState","persistedToken","auth","get","getIsAuthenticated","getUsername","getUserEmail","combineReducers","contactsReducers","filterReducer","authReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","userReducer","contactsReducer","devTools","process","persistor","persistStore","AuthNav","className","styles","container","to","exact","link","activeClassName","activeLink","UserMenu","useDispatch","useSelector","authSelectors","onLogout","useCallback","authOperations","src","defaultAvatar","alt","width","avatar","btn","type","onClick","AppBar","header","PrivateRoute","redirectTo","children","routeProps","PublicRoute","restricted","HomeView","lazy","RegisterView","LoginView","ContactsView","App","useEffect","fallback","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c6ba5334.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AppBar_header__2ZFxd\",\"container\":\"AppBar_container__20UsO\",\"nav\":\"AppBar_nav__1vzK2\",\"link\":\"AppBar_link__3Qo1T\",\"activeLink\":\"AppBar_activeLink__2bBKQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"UserMenu_container__1_S1h\",\"user\":\"UserMenu_user__1BA_Q\",\"avatar\":\"UserMenu_avatar__2EZR-\",\"name\":\"UserMenu_name__2Xbf0\",\"btn\":\"UserMenu_btn__h_aBj\"};","import { createReducer } from '@reduxjs/toolkit';\r\n\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} from './contacts-actions';\r\n\r\nconst contacts = createReducer([], {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [payload, ...state],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nconst setError = (_, { payload }) => payload;\r\n\r\nconst error = createReducer(null, {\r\n  [fetchContactsError]: setError,\r\n  [addContactError]: setError,\r\n  [deleteContactError]: setError,\r\n});\r\n\r\nexport default { contacts, loading, error };\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst filterContacts = createAction('filter/filterContacts', filter => ({\r\n  payload: filter,\r\n}));\r\n\r\nexport default { filterContacts };\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport filterActions from './filter-actions';\r\n\r\nconst filter = createReducer('', {\r\n  [filterActions.filterContacts]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default filter;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__19Njt\",\"header\":\"App_header__1DpGc\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const registerRequest = createAction('auth/registerRequest');\r\nexport const registerSuccess = createAction('auth/registerSuccess');\r\nexport const registerError = createAction('auth/registerError');\r\n\r\nexport const loginRequest = createAction('auth/loginRequest');\r\nexport const loginSuccess = createAction('auth/loginSuccess');\r\nexport const loginError = createAction('auth/loginError');\r\n\r\nexport const logoutRequest = createAction('auth/logoutRequest');\r\nexport const logoutSuccess = createAction('auth/logoutSuccess');\r\nexport const logoutError = createAction('auth/logoutError');\r\n\r\nexport const getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nexport const getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nexport const getCurrentUserError = createAction('auth/getCurrentUserError');\r\n\r\nexport default {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  registerSuccess,\r\n  registerError,\r\n  logoutSuccess,\r\n  logoutError,\r\n  loginSuccess,\r\n  loginError,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n} from './auth-actions';\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n  [registerSuccess]: (_, { payload }) => payload.user,\r\n  [loginSuccess]: (_, { payload }) => payload.user,\r\n  [logoutSuccess]: () => initialUserState,\r\n  [getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [registerSuccess]: (_, { payload }) => payload.token,\r\n  [loginSuccess]: (_, { payload }) => payload.token,\r\n  [logoutSuccess]: () => null,\r\n});\r\n\r\nconst setError = (_, { payload }) => payload;\r\n\r\nconst error = createReducer(null, {\r\n  [registerError]: setError,\r\n  [loginError]: setError,\r\n  [logoutError]: setError,\r\n  [getCurrentUserError]: setError,\r\n});\r\n\r\nconst isAuthenticated = createReducer(false, {\r\n  [registerSuccess]: () => true,\r\n  [loginSuccess]: () => true,\r\n  [getCurrentUserSuccess]: () => true,\r\n  [registerError]: () => false,\r\n  [loginError]: () => false,\r\n  [getCurrentUserError]: () => false,\r\n  [logoutSuccess]: () => false,\r\n});\r\n\r\nexport default { user, isAuthenticated, token, error };\r\n","import axios from 'axios';\r\nimport {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n} from './auth-actions';\r\n\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\n/*\r\n * POST @ /users/signup\r\n * body { name, email, password }\r\n *\r\n * После успешной регистрации добавляем токен в HTTP-заголовок\r\n */\r\nconst register = credentials => async dispatch => {\r\n  dispatch(registerRequest());\r\n\r\n  try {\r\n    const response = await axios.post('/users/signup', credentials);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(registerSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(registerError(error.message));\r\n  }\r\n};\r\n\r\n/*\r\n * POST @ /users/login\r\n * body:\r\n *    { email, password }\r\n *\r\n * После успешного логина добавляем токен в HTTP-заголовок\r\n */\r\nconst logIn = credentials => async dispatch => {\r\n  dispatch(loginRequest());\r\n\r\n  try {\r\n    const response = await axios.post('/users/login', credentials);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(loginSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(loginError(error.message));\r\n    alert(`${error.message}. Try again!`);\r\n  }\r\n};\r\n\r\n/*\r\n * POST @ /users/logout\r\n * headers:\r\n *    Authorization: Bearer token\r\n *\r\n * 1. После успешного логаута, удаляем токен из HTTP-заголовка\r\n */\r\nconst logOut = () => async dispatch => {\r\n  dispatch(logoutRequest());\r\n\r\n  try {\r\n    await axios.post('/users/logout');\r\n\r\n    token.unset();\r\n    dispatch(logoutSuccess());\r\n  } catch (error) {\r\n    dispatch(logoutError(error.message));\r\n  }\r\n};\r\n\r\n/*\r\n * GET @ /users/current\r\n * headers:\r\n *    Authorization: Bearer token\r\n *\r\n * 1. Забираем токен из стейта через getState()\r\n * 2. Если токена нет, выходим не выполняя никаких операций\r\n * 3. Если токен есть, добавляет его в HTTP-заголовок и выполянем операцию\r\n */\r\nconst getCurrentUser = () => async (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n\r\n  token.set(persistedToken);\r\n  dispatch(getCurrentUserRequest());\r\n\r\n  try {\r\n    const response = await axios.get('/users/current');\r\n\r\n    dispatch(getCurrentUserSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(getCurrentUserError(error.message));\r\n  }\r\n};\r\n\r\nexport default { register, logOut, logIn, getCurrentUser };\r\n","const getIsAuthenticated = state => state.auth.isAuthenticated;\r\n\r\nconst getUsername = state => state.auth.user.name;\r\n\r\nconst getUserEmail = state => state.auth.user.email;\r\n\r\nexport default {\r\n  getIsAuthenticated,\r\n  getUsername,\r\n  getUserEmail,\r\n};\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactsRequest = createAction('items/fetchContactsRequest');\r\nexport const fetchContactsSuccess = createAction('items/fetchContactsSuccess');\r\nexport const fetchContactsError = createAction('items/fetchContactsError');\r\n\r\nexport const addContactRequest = createAction('items/addContactRequest');\r\nexport const addContactSuccess = createAction('items/addContactSuccess');\r\nexport const addContactError = createAction('items/addContactError');\r\n\r\nexport const deleteContactRequest = createAction('items/deleteContactRequest');\r\nexport const deleteContactSuccess = createAction('items/deleteContactSuccess');\r\nexport const deleteContactError = createAction('items/deleteContactError');\r\n","import { combineReducers } from 'redux';\r\n\r\nimport contactsReducers from '../redux/contacts/contacts-reducers';\r\nimport filterReducer from '../redux/filter/filter-reducers';\r\n\r\nexport default combineReducers({\r\n  contacts: contactsReducers.contacts,\r\n  filter: filterReducer,\r\n  loading: contactsReducers.loading,\r\n  error: contactsReducers.error,\r\n});\r\n","import { combineReducers } from 'redux';\r\n\r\nimport { authReducers } from '../redux/auth';\r\n\r\nexport default combineReducers({\r\n  user: authReducers.user,\r\n  isAuthenticated: authReducers.isAuthenticated,\r\n  token: authReducers.token,\r\n  error: authReducers.error,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactsReducer from '../redux/contactsReducer';\r\nimport userReducer from '../redux/userReducer';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, userReducer),\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n","import { NavLink } from 'react-router-dom';\r\n\r\nimport styles from '../AppBar/AppBar.module.css';\r\n\r\nexport default function AuthNav() {\r\n  return (\r\n    <div className={styles.container}>\r\n      <NavLink\r\n        to=\"/register\"\r\n        exact\r\n        className={styles.link}\r\n        activeClassName={styles.activeLink}\r\n      >\r\n        Registration\r\n      </NavLink>\r\n      <NavLink\r\n        to=\"/login\"\r\n        exact\r\n        className={styles.link}\r\n        activeClassName={styles.activeLink}\r\n      >\r\n        LogIn\r\n      </NavLink>\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/default-avatar.34fb7587.png\";","import React, { useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { authSelectors, authOperations } from '../../redux/auth';\r\nimport defaultAvatar from './default-avatar.png';\r\n\r\nimport styles from './UserMenu.module.css';\r\n\r\n// const mapStateToProps = state => ({\r\n//   name: authSelectors.getUserEmail(state),\r\n//   avatar: defaultAvatar,\r\n// });\r\n\r\n// const mapDispatchToProps = {\r\n//   onLogout: authOperations.logOut,\r\n// };\r\n\r\nexport default function UserMenu() {\r\n  const dispatch = useDispatch();\r\n\r\n  const name = useSelector(authSelectors.getUserEmail);\r\n\r\n  const onLogout = useCallback(() => {\r\n    dispatch(authOperations.logOut());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.user}>\r\n        <img\r\n          src={defaultAvatar}\r\n          alt=\"avatar\"\r\n          width=\"32\"\r\n          className={styles.avatar}\r\n        />\r\n        <span className={styles.name}>{name}</span>\r\n      </div>\r\n      <button className={styles.btn} type=\"button\" onClick={onLogout}>\r\n        LogOut\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import { useSelector } from 'react-redux';\r\n\r\nimport AuthNav from '../AuthNav';\r\n// import Navigation from '../Navigation';\r\nimport UserMenu from '../UserMenu';\r\n\r\nimport { authSelectors } from '../../redux/auth';\r\n\r\nimport styles from './AppBar.module.css';\r\n\r\nexport default function AppBar() {\r\n  const isAuthenticated = useSelector(authSelectors.getIsAuthenticated);\r\n  return (\r\n    <header className={styles.header}>\r\n      {/* <Navigation /> */}\r\n      {isAuthenticated ? <UserMenu /> : <AuthNav />}\r\n    </header>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { authSelectors } from '../../redux/auth';\r\n\r\n/**\r\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\r\n * - В противном случае рендерит Redirect на /login\r\n */\r\n\r\nexport default function PrivateRoute({\r\n  // isAuthenticated,\r\n  redirectTo,\r\n  children,\r\n  ...routeProps\r\n}) {\r\n  const isAuthenticated = useSelector(authSelectors.getIsAuthenticated);\r\n\r\n  return (\r\n    <Route {...routeProps}>\r\n      {isAuthenticated ? children : <Redirect to={redirectTo} />}\r\n    </Route>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { authSelectors } from '../../redux/auth';\r\n\r\n/**\r\n * - Если маршрут ограниченный, и пользователь залогинен, рендерит редирект на /contacts\r\n * - В противном случае рендерит компонент\r\n */\r\nexport default function PublicRoute({\r\n  // isAuthenticated,\r\n  redirectTo,\r\n  children,\r\n  ...routeProps\r\n}) {\r\n  const isAuthenticated = useSelector(authSelectors.getIsAuthenticated);\r\n\r\n  return (\r\n    <Route {...routeProps}>\r\n      {isAuthenticated && routeProps.restricted ? (\r\n        <Redirect to={redirectTo} />\r\n      ) : (\r\n        children\r\n      )}\r\n    </Route>\r\n  );\r\n}\r\n","import React, { useEffect, Suspense, lazy } from 'react';\r\nimport { Switch } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport AppBar from '../components/AppBar';\r\nimport { PrivateRoute, PublicRoute } from '../components/Routes';\r\n\r\nimport { authOperations } from '../redux/auth';\r\n\r\nimport styles from './App.module.css';\r\n\r\nconst HomeView = lazy(() => import('../views/HomeView'));\r\nconst RegisterView = lazy(() => import('../views/RegisterView'));\r\nconst LoginView = lazy(() => import('../views/LoginView'));\r\nconst ContactsView = lazy(() => import('../views/ContactsView'));\r\n\r\nexport default function App() {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(authOperations.getCurrentUser());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <AppBar />\r\n      <Suspense fallback={<p>Loading...</p>}>\r\n        <Switch>\r\n          <PublicRoute path=\"/register\" restricted redirectTo=\"/contacts\">\r\n            <RegisterView />\r\n          </PublicRoute>\r\n          <PublicRoute path=\"/login\" restricted redirectTo=\"/contacts\">\r\n            <LoginView />\r\n          </PublicRoute>\r\n\r\n          <PrivateRoute path=\"/contacts\" redirectTo=\"/login\">\r\n            <ContactsView />\r\n          </PrivateRoute>\r\n          <PublicRoute path=\"/\" restricted redirectTo=\"/contacts\">\r\n            <HomeView />\r\n          </PublicRoute>\r\n        </Switch>\r\n      </Suspense>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport store from './redux/store';\nimport App from './components/App';\n\nimport 'modern-normalize';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}